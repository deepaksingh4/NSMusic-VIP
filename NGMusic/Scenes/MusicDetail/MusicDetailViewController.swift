//
//  MusicDetailViewController.swift
//  NGMusic
//
//  Created by Deepak on 05/08/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import AVKit
import UIKit

protocol MusicDetailDisplayLogic: AnyObject {
    func displayInfo(viewModel: MusicDetail.LoadResultDetails.ViewModel)
}

class MusicDetailViewController: UIViewController, MusicDetailDisplayLogic {
    func displayInfo(viewModel: MusicDetail.LoadResultDetails.ViewModel) {
        self.viewModel = viewModel

        musicTitle.text = viewModel.title
        imageView.loadImageUsingUrlString(url: viewModel.image, placeHolderImage: nil)
        if viewModel.mediaURL != nil {
            playButton.isHidden = false
        } else {
            playButton.isHidden = true
        }

        if viewModel.link != nil {
            guard let navController = self.navigationController as? NGNavigationViewController else {
                return
            }
            navController.addBarButtonItem(barButtonType: .search(callBack: UIAction(handler: {[weak self] _ in
                self?.openBrowser()
            })), position: .right)
        }

    }

    var interactor: MusicDetailBusinessLogic?
    var router: (NSObjectProtocol & MusicDetailRoutingLogic & MusicDetailDataPassing)?

    private var viewModel: MusicDetail.LoadResultDetails.ViewModel?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = MusicDetailInteractor()
        let presenter = MusicDetailPresenter()
        let router = MusicDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }

    @IBOutlet weak var musicTitle: UILabel!
    @IBOutlet weak var imageView: CustomImageView!
    @IBOutlet weak var playButton: CircularBtton!

    @IBAction func play(_ sender: CircularBtton) {
        if let videoURL = viewModel?.mediaURL {
            let player = AVPlayer(url: videoURL)
            let playerViewController = AVPlayerViewController()
            playerViewController.player = player
            self.present(playerViewController, animated: true) {
                playerViewController.player!.play()
            }
        }
    }

    func setupUI() {
        interactor?.updateDetail()
    }

    @objc private func openBrowser() {
        if let collectionViewUrl = viewModel?.link {
            if UIApplication.shared.canOpenURL(collectionViewUrl) {
                UIApplication.shared.open(collectionViewUrl, completionHandler: nil)
            }
        }
    }
}
